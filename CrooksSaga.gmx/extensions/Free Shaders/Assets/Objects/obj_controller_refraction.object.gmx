<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);

uni_resolution = shader_get_uniform(shd_refraction,"u_resolution");
var_resolution_x = view_wview;
var_resolution_y = view_hview;

uni_texture_resolution = shader_get_uniform(shd_refraction,"u_textureRes");
uni_texture_position = shader_get_uniform(shd_refraction,"u_texturePos");
var_refraction_amount = 0.03;

samp_normal_map = shader_get_sampler_index(shd_refraction, "s_normalMap");
samp_diffuse_tex = shader_get_sampler_index(shd_refraction, "s_diffuseTex");

bg_Normal_Map = background_get_texture(bac_refraction_normal);  
bg_Normal_Map_width = background_get_width(bac_refraction_normal);
bg_Normal_Map_height = background_get_height(bac_refraction_normal);

bg_Diffuse_Tex = background_get_texture(bac_refraction_diffuse);

shader_enabled = true;

surf = surface_create(view_wview, view_hview);
view_surface_id[0] = surf;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if keyboard_check(ord('Q')) var_refraction_amount += 0.001;
if keyboard_check(ord('A')) var_refraction_amount -= 0.001;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
var_mouse_pos_x = (mouse_x - view_xview) - (bg_Normal_Map_width/2);
var_mouse_pos_y = (mouse_y - view_yview) - (bg_Normal_Map_height/2);

draw_surface(surf,0,0);
if shader_enabled shader_set(shd_refraction);
    shader_set_uniform_f(uni_resolution, var_resolution_x, var_resolution_y);
    shader_set_uniform_f(uni_texture_resolution, bg_Normal_Map_width, bg_Normal_Map_height);
    shader_set_uniform_f(uni_texture_position, var_mouse_pos_x, var_mouse_pos_y, var_refraction_amount);
    texture_set_stage(samp_normal_map, bg_Normal_Map);
    texture_set_stage(samp_diffuse_tex, bg_Diffuse_Tex);
    draw_surface_part(surf, var_mouse_pos_x, var_mouse_pos_y, bg_Normal_Map_width, bg_Normal_Map_height, var_mouse_pos_x, var_mouse_pos_y);
shader_reset();

draw_text(0,0,"Real FPS: "+string(fps_real));
draw_text(0,12,"Refraction offset (Q &amp; A to adjust): "+string(var_refraction_amount));

draw_text(0,60,"Spacebar to toggle shader");
draw_text(0,72,"Escape key to exit");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="32">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>shader_enabled = !shader_enabled;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
